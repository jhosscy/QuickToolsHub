var X;((R)=>{class O{version;errorCorrectionLevel;static encodeText(F,G){let I=X.QrSegment.makeSegments(F);return O.encodeSegments(I,G)}static encodeBinary(F,G){let I=X.QrSegment.makeBytes(F);return O.encodeSegments([I],G)}static encodeSegments(F,G,I=1,J=40,K=-1,W=!0){if(!(O.MIN_VERSION<=I&&I<=J&&J<=O.MAX_VERSION)||K<-1||K>7)throw new RangeError("Invalid value");let N,$;for(N=I;;N++){let T=O.getNumDataCodewords(N,G)*8,D=f.getTotalBits(F,N);if(D<=T){$=D;break}if(N>=J)throw new RangeError("Data too long")}for(let T of[O.Ecc.MEDIUM,O.Ecc.QUARTILE,O.Ecc.HIGH])if(W&&$<=O.getNumDataCodewords(N,T)*8)G=T;let Z=[];for(let T of F){_(T.mode.modeBits,4,Z),_(T.numChars,T.mode.numCharCountBits(N),Z);for(let D of T.getData())Z.push(D)}U(Z.length==$);let P=O.getNumDataCodewords(N,G)*8;U(Z.length<=P),_(0,Math.min(4,P-Z.length),Z),_(0,(8-Z.length%8)%8,Z),U(Z.length%8==0);for(let T=236;Z.length<P;T^=253)_(T,8,Z);let z=[];while(z.length*8<Z.length)z.push(0);return Z.forEach((T,D)=>z[D>>>3]|=T<<7-(D&7)),new O(N,G,z,K)}size;mask;modules=[];isFunction=[];constructor(F,G,I,J){this.version=F;this.errorCorrectionLevel=G;if(F<O.MIN_VERSION||F>O.MAX_VERSION)throw new RangeError("Version value out of range");if(J<-1||J>7)throw new RangeError("Mask value out of range");this.size=F*4+17;let K=[];for(let N=0;N<this.size;N++)K.push(!1);for(let N=0;N<this.size;N++)this.modules.push(K.slice()),this.isFunction.push(K.slice());this.drawFunctionPatterns();let W=this.addEccAndInterleave(I);if(this.drawCodewords(W),J==-1){let N=1e9;for(let $=0;$<8;$++){this.applyMask($),this.drawFormatBits($);let Z=this.getPenaltyScore();if(Z<N)J=$,N=Z;this.applyMask($)}}U(0<=J&&J<=7),this.mask=J,this.applyMask(J),this.drawFormatBits(J),this.isFunction=[]}getModule(F,G){return 0<=F&&F<this.size&&0<=G&&G<this.size&&this.modules[G][F]}drawFunctionPatterns(){for(let I=0;I<this.size;I++)this.setFunctionModule(6,I,I%2==0),this.setFunctionModule(I,6,I%2==0);this.drawFinderPattern(3,3),this.drawFinderPattern(this.size-4,3),this.drawFinderPattern(3,this.size-4);let F=this.getAlignmentPatternPositions(),G=F.length;for(let I=0;I<G;I++)for(let J=0;J<G;J++)if(!(I==0&&J==0||I==0&&J==G-1||I==G-1&&J==0))this.drawAlignmentPattern(F[I],F[J]);this.drawFormatBits(0),this.drawVersion()}drawFormatBits(F){let G=this.errorCorrectionLevel.formatBits<<3|F,I=G;for(let K=0;K<10;K++)I=I<<1^(I>>>9)*1335;let J=(G<<10|I)^21522;U(J>>>15==0);for(let K=0;K<=5;K++)this.setFunctionModule(8,K,q(J,K));this.setFunctionModule(8,7,q(J,6)),this.setFunctionModule(8,8,q(J,7)),this.setFunctionModule(7,8,q(J,8));for(let K=9;K<15;K++)this.setFunctionModule(14-K,8,q(J,K));for(let K=0;K<8;K++)this.setFunctionModule(this.size-1-K,8,q(J,K));for(let K=8;K<15;K++)this.setFunctionModule(8,this.size-15+K,q(J,K));this.setFunctionModule(8,this.size-8,!0)}drawVersion(){if(this.version<7)return;let F=this.version;for(let I=0;I<12;I++)F=F<<1^(F>>>11)*7973;let G=this.version<<12|F;U(G>>>18==0);for(let I=0;I<18;I++){let J=q(G,I),K=this.size-11+I%3,W=Math.floor(I/3);this.setFunctionModule(K,W,J),this.setFunctionModule(W,K,J)}}drawFinderPattern(F,G){for(let I=-4;I<=4;I++)for(let J=-4;J<=4;J++){let K=Math.max(Math.abs(J),Math.abs(I)),W=F+J,N=G+I;if(0<=W&&W<this.size&&0<=N&&N<this.size)this.setFunctionModule(W,N,K!=2&&K!=4)}}drawAlignmentPattern(F,G){for(let I=-2;I<=2;I++)for(let J=-2;J<=2;J++)this.setFunctionModule(F+J,G+I,Math.max(Math.abs(J),Math.abs(I))!=1)}setFunctionModule(F,G,I){this.modules[G][F]=I,this.isFunction[G][F]=!0}addEccAndInterleave(F){let G=this.version,I=this.errorCorrectionLevel;if(F.length!=O.getNumDataCodewords(G,I))throw new RangeError("Invalid argument");let J=O.NUM_ERROR_CORRECTION_BLOCKS[I.ordinal][G],K=O.ECC_CODEWORDS_PER_BLOCK[I.ordinal][G],W=Math.floor(O.getNumRawDataModules(G)/8),N=J-W%J,$=Math.floor(W/J),Z=[],P=O.reedSolomonComputeDivisor(K);for(let T=0,D=0;T<J;T++){let Y=F.slice(D,D+$-K+(T<N?0:1));D+=Y.length;let A=O.reedSolomonComputeRemainder(Y,P);if(T<N)Y.push(0);Z.push(Y.concat(A))}let z=[];for(let T=0;T<Z[0].length;T++)Z.forEach((D,Y)=>{if(T!=$-K||Y>=N)z.push(D[T])});return U(z.length==W),z}drawCodewords(F){if(F.length!=Math.floor(O.getNumRawDataModules(this.version)/8))throw new RangeError("Invalid argument");let G=0;for(let I=this.size-1;I>=1;I-=2){if(I==6)I=5;for(let J=0;J<this.size;J++)for(let K=0;K<2;K++){let W=I-K,$=(I+1&2)==0?this.size-1-J:J;if(!this.isFunction[$][W]&&G<F.length*8)this.modules[$][W]=q(F[G>>>3],7-(G&7)),G++}}U(G==F.length*8)}applyMask(F){if(F<0||F>7)throw new RangeError("Mask value out of range");for(let G=0;G<this.size;G++)for(let I=0;I<this.size;I++){let J;switch(F){case 0:J=(I+G)%2==0;break;case 1:J=G%2==0;break;case 2:J=I%3==0;break;case 3:J=(I+G)%3==0;break;case 4:J=(Math.floor(I/3)+Math.floor(G/2))%2==0;break;case 5:J=I*G%2+I*G%3==0;break;case 6:J=(I*G%2+I*G%3)%2==0;break;case 7:J=((I+G)%2+I*G%3)%2==0;break;default:throw new Error("Unreachable")}if(!this.isFunction[G][I]&&J)this.modules[G][I]=!this.modules[G][I]}}getPenaltyScore(){let F=0;for(let K=0;K<this.size;K++){let W=!1,N=0,$=[0,0,0,0,0,0,0];for(let Z=0;Z<this.size;Z++)if(this.modules[K][Z]==W){if(N++,N==5)F+=O.PENALTY_N1;else if(N>5)F++}else{if(this.finderPenaltyAddHistory(N,$),!W)F+=this.finderPenaltyCountPatterns($)*O.PENALTY_N3;W=this.modules[K][Z],N=1}F+=this.finderPenaltyTerminateAndCount(W,N,$)*O.PENALTY_N3}for(let K=0;K<this.size;K++){let W=!1,N=0,$=[0,0,0,0,0,0,0];for(let Z=0;Z<this.size;Z++)if(this.modules[Z][K]==W){if(N++,N==5)F+=O.PENALTY_N1;else if(N>5)F++}else{if(this.finderPenaltyAddHistory(N,$),!W)F+=this.finderPenaltyCountPatterns($)*O.PENALTY_N3;W=this.modules[Z][K],N=1}F+=this.finderPenaltyTerminateAndCount(W,N,$)*O.PENALTY_N3}for(let K=0;K<this.size-1;K++)for(let W=0;W<this.size-1;W++){let N=this.modules[K][W];if(N==this.modules[K][W+1]&&N==this.modules[K+1][W]&&N==this.modules[K+1][W+1])F+=O.PENALTY_N2}let G=0;for(let K of this.modules)G=K.reduce((W,N)=>W+(N?1:0),G);let I=this.size*this.size,J=Math.ceil(Math.abs(G*20-I*10)/I)-1;return U(0<=J&&J<=9),F+=J*O.PENALTY_N4,U(0<=F&&F<=2568888),F}getAlignmentPatternPositions(){if(this.version==1)return[];else{let F=Math.floor(this.version/7)+2,G=Math.floor((this.version*8+F*3+5)/(F*4-4))*2,I=[6];for(let J=this.size-7;I.length<F;J-=G)I.splice(1,0,J);return I}}static getNumRawDataModules(F){if(F<O.MIN_VERSION||F>O.MAX_VERSION)throw new RangeError("Version number out of range");let G=(16*F+128)*F+64;if(F>=2){let I=Math.floor(F/7)+2;if(G-=(25*I-10)*I-55,F>=7)G-=36}return U(208<=G&&G<=29648),G}static getNumDataCodewords(F,G){return Math.floor(O.getNumRawDataModules(F)/8)-O.ECC_CODEWORDS_PER_BLOCK[G.ordinal][F]*O.NUM_ERROR_CORRECTION_BLOCKS[G.ordinal][F]}static reedSolomonComputeDivisor(F){if(F<1||F>255)throw new RangeError("Degree out of range");let G=[];for(let J=0;J<F-1;J++)G.push(0);G.push(1);let I=1;for(let J=0;J<F;J++){for(let K=0;K<G.length;K++)if(G[K]=O.reedSolomonMultiply(G[K],I),K+1<G.length)G[K]^=G[K+1];I=O.reedSolomonMultiply(I,2)}return G}static reedSolomonComputeRemainder(F,G){let I=G.map((J)=>0);for(let J of F){let K=J^I.shift();I.push(0),G.forEach((W,N)=>I[N]^=O.reedSolomonMultiply(W,K))}return I}static reedSolomonMultiply(F,G){if(F>>>8!=0||G>>>8!=0)throw new RangeError("Byte out of range");let I=0;for(let J=7;J>=0;J--)I=I<<1^(I>>>7)*285,I^=(G>>>J&1)*F;return U(I>>>8==0),I}finderPenaltyCountPatterns(F){let G=F[1];U(G<=this.size*3);let I=G>0&&F[2]==G&&F[3]==G*3&&F[4]==G&&F[5]==G;return(I&&F[0]>=G*4&&F[6]>=G?1:0)+(I&&F[6]>=G*4&&F[0]>=G?1:0)}finderPenaltyTerminateAndCount(F,G,I){if(F)this.finderPenaltyAddHistory(G,I),G=0;return G+=this.size,this.finderPenaltyAddHistory(G,I),this.finderPenaltyCountPatterns(I)}finderPenaltyAddHistory(F,G){if(G[0]==0)F+=this.size;G.pop(),G.unshift(F)}static MIN_VERSION=1;static MAX_VERSION=40;static PENALTY_N1=3;static PENALTY_N2=3;static PENALTY_N3=40;static PENALTY_N4=10;static ECC_CODEWORDS_PER_BLOCK=[[-1,7,10,15,20,26,18,20,24,30,18,20,24,26,30,22,24,28,30,28,28,28,28,30,30,26,28,30,30,30,30,30,30,30,30,30,30,30,30,30,30],[-1,10,16,26,18,24,16,18,22,22,26,30,22,22,24,24,28,28,26,26,26,26,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28],[-1,13,22,18,26,18,24,18,22,20,24,28,26,24,20,30,24,28,28,26,30,28,30,30,30,30,28,30,30,30,30,30,30,30,30,30,30,30,30,30,30],[-1,17,28,22,16,22,28,26,26,24,28,24,28,22,24,24,30,28,28,26,28,30,24,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30]];static NUM_ERROR_CORRECTION_BLOCKS=[[-1,1,1,1,1,1,2,2,2,2,4,4,4,4,4,6,6,6,6,7,8,8,9,9,10,12,12,12,13,14,15,16,17,18,19,19,20,21,22,24,25],[-1,1,1,1,2,2,4,4,4,5,5,5,8,9,9,10,10,11,13,14,16,17,17,18,20,21,23,25,26,28,29,31,33,35,37,38,40,43,45,47,49],[-1,1,1,2,2,4,4,6,6,8,8,8,10,12,16,12,17,16,18,21,20,23,23,25,27,29,34,34,35,38,40,43,45,48,51,53,56,59,62,65,68],[-1,1,1,2,4,4,4,5,6,8,8,11,11,16,16,18,16,19,21,25,25,25,34,30,32,35,37,40,42,45,48,51,54,57,60,63,66,70,74,77,81]]}R.QrCode=O;function _(F,G,I){if(G<0||G>31||F>>>G!=0)throw new RangeError("Value out of range");for(let J=G-1;J>=0;J--)I.push(F>>>J&1)}function q(F,G){return(F>>>G&1)!=0}function U(F){if(!F)throw new Error("Assertion error")}class f{mode;numChars;bitData;static makeBytes(F){let G=[];for(let I of F)_(I,8,G);return new f(f.Mode.BYTE,F.length,G)}static makeNumeric(F){if(!f.isNumeric(F))throw new RangeError("String contains non-numeric characters");let G=[];for(let I=0;I<F.length;){let J=Math.min(F.length-I,3);_(parseInt(F.substring(I,I+J),10),J*3+1,G),I+=J}return new f(f.Mode.NUMERIC,F.length,G)}static makeAlphanumeric(F){if(!f.isAlphanumeric(F))throw new RangeError("String contains unencodable characters in alphanumeric mode");let G=[],I;for(I=0;I+2<=F.length;I+=2){let J=f.ALPHANUMERIC_CHARSET.indexOf(F.charAt(I))*45;J+=f.ALPHANUMERIC_CHARSET.indexOf(F.charAt(I+1)),_(J,11,G)}if(I<F.length)_(f.ALPHANUMERIC_CHARSET.indexOf(F.charAt(I)),6,G);return new f(f.Mode.ALPHANUMERIC,F.length,G)}static makeSegments(F){if(F=="")return[];else if(f.isNumeric(F))return[f.makeNumeric(F)];else if(f.isAlphanumeric(F))return[f.makeAlphanumeric(F)];else return[f.makeBytes(f.toUtf8ByteArray(F))]}static makeEci(F){let G=[];if(F<0)throw new RangeError("ECI assignment value out of range");else if(F<128)_(F,8,G);else if(F<16384)_(2,2,G),_(F,14,G);else if(F<1e6)_(6,3,G),_(F,21,G);else throw new RangeError("ECI assignment value out of range");return new f(f.Mode.ECI,0,G)}static isNumeric(F){return f.NUMERIC_REGEX.test(F)}static isAlphanumeric(F){return f.ALPHANUMERIC_REGEX.test(F)}constructor(F,G,I){this.mode=F;this.numChars=G;this.bitData=I;if(G<0)throw new RangeError("Invalid argument");this.bitData=I.slice()}getData(){return this.bitData.slice()}static getTotalBits(F,G){let I=0;for(let J of F){let K=J.mode.numCharCountBits(G);if(J.numChars>=1<<K)return 1/0;I+=4+K+J.bitData.length}return I}static toUtf8ByteArray(F){F=encodeURI(F);let G=[];for(let I=0;I<F.length;I++)if(F.charAt(I)!="%")G.push(F.charCodeAt(I));else G.push(parseInt(F.substring(I+1,I+3),16)),I+=2;return G}static NUMERIC_REGEX=/^[0-9]*$/;static ALPHANUMERIC_REGEX=/^[A-Z0-9 $%*+.\/:-]*$/;static ALPHANUMERIC_CHARSET="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ $%*+-./:"}R.QrSegment=f})(X||={});((M)=>{let O;((L)=>{class _{ordinal;formatBits;static LOW=new _(0,1);static MEDIUM=new _(1,0);static QUARTILE=new _(2,3);static HIGH=new _(3,2);constructor(q,U){this.ordinal=q;this.formatBits=U}}L.Ecc=_})(O=M.QrCode||={})})(X||={});((E)=>{let O;((j)=>{class _{modeBits;numBitsCharCount;static NUMERIC=new _(1,[10,12,14]);static ALPHANUMERIC=new _(2,[9,11,13]);static BYTE=new _(4,[8,16,16]);static KANJI=new _(8,[8,10,12]);static ECI=new _(7,[0,0,0]);constructor(q,U){this.modeBits=q;this.numBitsCharCount=U}numCharCountBits(q){return this.numBitsCharCount[Math.floor((q+7)/17)]}}j.Mode=_})(O=E.QrSegment||={})})(X||={});export { X };
